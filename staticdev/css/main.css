

.google-login-img{
	height: 50px;
}

.ul-clean{
	list-style-type: none;
}

.ul-clean li{
	margin-top:15px;
}

.item-box{
	min-height: 50px;
	padding: 12px;
	border: 1px solid #ccc;
}

.green-box{
    background-color: #dff0d8;
    border-color: #d6e9c6;
    color: #3c763d;
}



.red-box{
    background-color: #f2dede;
    border-color: #ebccd1;
    color: #a94442;
}

#ngdialog1.large-modal .ngdialog-content{
	width: 600px;
	min-height: 275px;

}

#ngdialog1.small-modal .ngdialog-content{
	width: 450px;
}


.note-box{
	width: 400px;
}

.footer{
	margin-top: 75px;
}


.small-img{
	width: 100px;
	height:100px;
}

.modal-image{
	width: 80%;
}

.bottom-bar{
	position: fixed;
	height: 65px;
	bottom: 0px;
	left:0px;
	width: 100%;
	z-index: 1000;
	background-color: rgba(255, 255, 255, 0.9);


	border-top: 2px solid grey;
	border-radius: 3px;
	padding-top: 10px;

}

.bottom-bar #encounter-box{
	width:90%;
	margin:0 auto;
}

.box50{
	height:50px;
}


ce-entity ce-flag{
	font-weight: bold;
}




.nav-pills > li.active > a, .nav-pills > li.active > a:hover, .nav-pills > li.active > a:focus {
    background-color: grey;
    color:white;
}

.activity-item img{
	/*height:75px;*/
	/*width: 75px;*/
}

.cover-image {
	margin: 0 auto;
	max-width: 50%;
}

/*    TO DO     */

.todo {
	position: relative;
}

.btn-custom {
	color: #333;
	display: none;
}

.todo:hover .btn-custom{
	display: block;
}

.todo .quick-card-editor-card {
	position: absolute;
	top: 10px;
	right: 10px;
}

.thumbnail-custom {
    height: auto;
    width: 160px;
}


/**
 * For the correct positioning of the placeholder element, the dnd-list and
 * it's children must have position: relative
 */
ul[dnd-list],
ul[dnd-list] > li {
	position: relative;
}

/**
 * The dnd-list should always have a min-height,
 * otherwise you can't drop to it once it's empty
 */
ul[dnd-list] {
    min-height: 42px;
    padding-left: 0px;
}

/**
 * The dndDraggingSource class will be applied to
 * the source element of a drag operation. It makes
 * sense to hide it to give the user the feeling
 * that he's actually moving it.
 */
ul[dnd-list] .dndDraggingSource {
    display: none;
}

/**
 * An element with .dndPlaceholder class will be
 * added to the dnd-list while the user is dragging
 * over it.
 */
ul[dnd-list] .dndPlaceholder {
    display: block;
    background-color: #ddd;
    min-height: 42px;
}

/**
 * The dnd-lists's child elements currently MUST have
 * position: relative. Otherwise we can not determine
 * whether the mouse pointer is in the upper or lower
 * half of the element we are dragging over. In other
 * browsers we can use event.offsetY for this.
 */
ul[dnd-list] li {
    background-color: #fff;
    border: 1px solid #ddd;
    border-top-right-radius: 4px;
    border-top-left-radius: 4px;
    display: block;
    padding: 10px 15px;
    margin-bottom: -1px;
}

/**
 * Show selected elements in green
 */
ul[dnd-list] li.selected {
    background-color: #dff0d8;
    color: #3c763d;
}